package com.security.landicorp.vulnerabilitydetect;

// 一下这些文件是供java调用
//import org.apache.http.client.HttpClient;
//import org.apache.http.client.methods.HttpGet;
//import org.apache.http.impl.client.CloseableHttpClient;
//import org.apache.http.impl.client.HttpClients;
//import org.apache.http.HttpResponse;

// httpclient 供android使用
import cz.msebera.android.httpclient.client.HttpClient;
import cz.msebera.android.httpclient.client.methods.HttpGet;
import cz.msebera.android.httpclient.client.methods.HttpPost;
import cz.msebera.android.httpclient.client.entity.UrlEncodedFormEntity;
import cz.msebera.android.httpclient.NameValuePair;
import cz.msebera.android.httpclient.HttpEntity;
import cz.msebera.android.httpclient.util.EntityUtils;
import cz.msebera.android.httpclient.entity.ContentType;
import cz.msebera.android.httpclient.message.BasicNameValuePair;
import cz.msebera.android.httpclient.impl.client.CloseableHttpClient;
import cz.msebera.android.httpclient.client.methods.CloseableHttpResponse;
import cz.msebera.android.httpclient.client.ClientProtocolException;
import cz.msebera.android.httpclient.impl.client.HttpClients;
import cz.msebera.android.httpclient.HttpResponse;
import cz.msebera.android.httpclient.entity.mime.content.FileBody;
import cz.msebera.android.httpclient.entity.mime.content.StringBody;
import cz.msebera.android.httpclient.entity.mime.MultipartEntityBuilder;

import org.apache.commons.io.IOUtils;

import java.util.ArrayList;
import java.util.List;
import java.io.IOException;
import java.io.File;
import java.io.InputStream;
import java.io.UnsupportedEncodingException;

public class LocalHttpClient {
	private static final String mVersion = "1.0.0";
	private static final String mRemoteAddr = "http://172.27.16.28:8080/api/v1/login";
	private static final String mRemoteVDetect = "http://172.27.16.28:8080/api/v1/vdetect";
	//private static final String mRemoteAddr = "https://www.baidu.com";

	public String getVersion() {
		return mVersion;
	}

	//
	// get过程
	public void doGetProcess() throws IOException {
		CloseableHttpClient httpClient = HttpClients.createDefault();
		// 创建一个Get请求
		HttpGet httpGet = new HttpGet(mRemoteAddr);
		//   HttpPost httpPost = new HttpPost("http://www.pingwest.com/feed/"); POST请求
		// 发出请求,并接受服务端相应
		//
		HttpResponse response = httpClient.execute(httpGet);

		// 获取Http状态码
		int statusCode = response.getStatusLine().getStatusCode();

		if (statusCode == 200) {
			// html 也就是获取相应输入流
			InputStream inputStream = response.getEntity().getContent();

			String result = IOUtils.toString(inputStream, "UTF-8");
			inputStream.close();
			System.out.println(result);

		} else {
			System.out.println("服务器异常" + statusCode);
		}
		httpClient.close();
	}

	// post过程
	public void doPostProcess() throws IOException {
		CloseableHttpClient httpClient = HttpClients.createDefault();
		// 创建一个Post请求
		HttpPost httpPost = new HttpPost(mRemoteVDetect);

		// 创建文件参数
 		FileBody bin = new FileBody(new File("/tmp/logserverdebug.log")); 
           	StringBody comment = new StringBody("This is comment", ContentType.TEXT_PLAIN);
		try {
			HttpEntity reqEntity = MultipartEntityBuilder.create().addPart("file", bin).addPart("comment", comment).build();
			httpPost.setEntity(reqEntity);

			CloseableHttpResponse response = httpClient.execute(httpPost);
			try {
				HttpEntity entity = response.getEntity();
				if (entity != null) {
					System.out.println("--------------------------------------");  
					System.out.println("Response content: " + EntityUtils.toString(entity, "UTF-8"));  
					System.out.println("--------------------------------------");  
				}
			} finally {
				response.close();  
			}  
		} catch (ClientProtocolException e) {  
			e.printStackTrace();  
		} catch (UnsupportedEncodingException e1) {  
			e1.printStackTrace();  
		} catch (IOException e) {  
			e.printStackTrace();  
		} finally {  
			// 关闭连接,释放资源    
			try {  
				httpClient.close();  
			} catch (IOException e) {  
				e.printStackTrace();  
			}  
		}  
	}
};
