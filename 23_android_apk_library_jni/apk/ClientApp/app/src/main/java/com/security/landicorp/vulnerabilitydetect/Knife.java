package com.security.landicorp.vulnerabilitydetect;

import android.os.Parcelable;
import android.os.Parcel;

public class Knife implements Parcelable {

	private int mID;

	public int getID() {
		return mID;
	}

	public void setID(int v) {
		mID = v;
	}

	//下面是实现Parcelable接口的内容
	@Override
	public int describeContents() {
		return 0;                                            	//一般返回零就可以了
	}

	@Override
	public void writeToParcel(Parcel dest, int flags) {      	//在这个方法中写入这个类的变量
		dest.writeInt(mID);                                  	//对应着 Int age;
	}

	//在实现上面的接口方法后，接下来还需要执行反序列化，定义一个变量，并重新定义其中的部分方法
	public static final Parcelable.Creator<Knife> CREATOR = new Parcelable.Creator<Knife>(){
		@Override
		public Knife createFromParcel(Parcel source) {          //在这个方法中反序列化上面的序列化内容，最后根据反序列化得到的各个属性，得到之前试图传递的对象
									//反序列化的属性的顺序必须和之前写入的顺序一致
		    Knife knife = new Knife();
		    knife.mID = source.readInt();
		    return knife;
		}

		@Override
		public Knife[] newArray(int size) {
		    return new Knife[size];                     	//一般返回一个数量为size的传递的类的数组就可以了
		}
    	};
};
